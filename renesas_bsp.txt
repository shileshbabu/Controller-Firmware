/home/shilesh/to_do_setup_ti_sitara_board.txt

====================================>>>>>>>>>>>>>>>>>>>>>>>>
//flash erase 
Flash download: Bank 0 @ 0x18000000: 1 range affected


==>edit uboot command
*editenv xnargs, this command will used to set argument 

====================================>>>>>>>>>>>>>>>>>>>>>
baudrate=115200
bootargs=console=ttySC3,115200
bootcmd=run s_boot
bootdelay=3
cgargs=console=ttySC3,115200 console=tty0 ignore_loglevel root=/dev/nfs nfsroot=192.168.2.252:/tftpboot/nfs/ rw rootwaitip=192.168.2.129:192.168.2.252:192.168.2.1:255.255.255.0:eth0:
ethact=sh_eth
ethaddr=9c:49:9a:20:dc:ea
fileaddr=c000000
filesize=9dd000
flash=run ipcon;run flash_dtb;run flash_kernel;run flash_file_system;setenv bootcmd 'run s_boot';saveenv;run bootcmd
flash_dtb=setenv loadaddr 0x20000000;tftp r7s72100-hachiko.dtb.bin;sf probe 0;sf erase 0x000C0000 0x040000;sf write 0x20000000 0x000C0000 0x040000
flash_file_system=setenv loadaddr 0x0C000000;tftp rootfs.axfs.bin; sf probe 0:1;sf erase 0x400000 0x1C00000;sf write 0x0C000000 0x400000 0x1C00000
flash_kernel=setenv loadaddr 0x20000000;tftp uImage.bin; sf probe 0:1;sf erase 0x100000 0x500000;sf write 0x20000000 0x100000 0x500000
flash_xip=run ipcon;run flash_dtb;run flash_xip_kernel;run flash_file_system;setenv bootcmd 'run xsa_boot';saveenv;run bootcmd
flash_xip_kernel=setenv loadaddr 0x20000000;tftp xipImage.bin; sf probe 0:1;sf erase 0x100000 0x500000;sf write 0x20000000 0x100000 0x500000
ipaddr=192.168.2.129
ipcon=setenv ipaddr 192.168.2.129;setenv serverip 192.168.2.252
loadaddr=0x0C000000
nfs_boot=run s1 s2 s3 s4; set bootargs ${cgargs}; fdt chosen; bootm go
s1=sf probe 0; sf read 0D800000 C0000 8000
s2=sf probe 0:1; sf read 0D000000 100000 500000
s3=bootm start 0x0D000000 - 0x0D800000 ; bootm loados ;fdt memory 0x0C000000 0x04000000
s4=qspi dual
s_boot=run s1 s2 s3 s4; set bootargs ${xsaargs}; fdt chosen; bootm go
serverip=192.168.2.252
stderr=serial
stdin=serial
stdout=serial
ver=V1.00
xip_nfs_boot=run xsa1 xsa2 xsa3; set bootargs ${cgargs}; fdt chosen; bootx 18200000 0D800000
xn1=sf probe 0; sf read 20500000 C0000 8000
xn2=fdt addr 20500000 ; fdt memory 0x20000000 0x00A00000
xn3=qspi dual
xn_boot=run xn1 xn2 xn3; set bootargs ${xnargs}; fdt chosen; bootx 18200000 20500000
xsa1=sf probe 0; sf read 0D800000 C0000 8000
xsa2=fdt addr 0D800000 ; fdt memory 0x0C000000 0x04000000
xsa3=qspi dual
xsa_boot=run xsa1 xsa2 xsa3; set bootargs ${xsaargs}; fdt chosen; bootx 18200000 0D800000
xsaargs=console=ttySC3,115200 console=tty0 ignore_loglevel root=/dev/null rootflags=physaddr=0x18800000

Environment size: 2344/262140 bytes
CG_FRTU> 
====================================>>>>>>>>>>>>>>>>>>>> Uboot command
Environment size: 2533/262140 bytes
base    - print or set address offset
bdinfo  - print Board Info structure
boot    - boot default, i.e., run 'bootcmd'
bootd   - boot default, i.e., run 'bootcmd'
bootm   - boot application image from memory
bootp   - boot image via network using BOOTP/TFTP protocol
bootx   - boot XIP kernel in Flash
cmp     - memory compare
coninfo - print console devices and information
cp      - memory copy
crc32   - checksum calculation
date    - get/set/reset date & time
dhcp    - boot image via network using DHCP/TFTP protocol
echo    - echo args to console
editenv - edit environment variable
eeprom  - EEPROM sub-system
env     - environment handling commands
erase   - erase FLASH memory
exit    - exit script
ext2load- load binary file from a Ext2 filesystem
ext2ls  - list files in a directory (default /)
ext4load- load binary file from a Ext4 filesystem
ext4ls  - list files in a directory (default /)
ext4size- determine a file's size
false   - do nothing, unsuccessfully
fatinfo - print information about filesystem
fatload - load binary file from a dos filesystem
fatls   - list files in a directory (default /)
fatsize - determine a file's size
fdt     - flattened device tree utility commands
flinfo  - print FLASH memory information
go      - start application at address 'addr'
help    - print command description/usage
i2c     - I2C sub-system
iminfo  - print header information for application image
imls    - list all images found in flash
imxtract- extract a part of a multi-image
itest   - return true/false on integer compare
loadb   - load binary file over serial line (kermit mode)
loads   - load S-Record file over serial line
loadx   - load binary file over serial line (xmodem mode)
loady   - load binary file over serial line (ymodem mode)
loop    - infinite loop on address range
md      - memory display
mdio    - MDIO utility commands
mii     - MII utility commands
mm      - memory modify (auto-incrementing address)
mw      - memory write (fill)
nfs     - boot image via network using NFS protocol
nm      - memory modify (constant address)
ping    - send ICMP ECHO_REQUEST to network host
printenv- print environment variables
protect - enable or disable FLASH write protection
qspi    - Change QSPI XIP Mode
reset   - Perform RESET of the CPU
run     - run commands in an environment variable
saveenv - save environment variables to persistent storage
setenv  - set environment variables
sf      - SPI flash sub-system
showvar - print local hushshell variables
sleep   - delay execution for some time
sntp    - synchronize RTC via network
source  - run script from memory
test    - minimal test like /bin/sh
tftpboot- boot image via network using TFTP protocol
true    - do nothing, successfully
usb     - USB sub-system
usbboot - boot from USB device
version - print monitor, compiler and linker version
CG_FRTU> 

